/*
 * Movie API Specification
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * Contact: juliuscanute@touchcapture.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using MovieApi.Attributes;
using MovieApi.Models;

namespace MovieApi.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class QueryMoviesApiController : Controller
    { 
        /// <summary>
        /// Get a list of movies [1-30] per page
        /// </summary>
        
        /// <param name="pageId"></param>
        /// <response code="200">Success</response>
        /// <response code="404">Invalid page ID</response>
        [HttpGet]
        [Route("/v1/movies/recent/{pageId}")]
        [ValidateModelState]
        [SwaggerOperation("V1MoviesRecentPageIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PageRecord), description: "Success")]
        [SwaggerResponse(statusCode: 404, type: typeof(Exception), description: "Invalid page ID")]
        public virtual IActionResult V1MoviesRecentPageIdGet([FromRoute][Required]long? pageId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PageRecord));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Exception));

            string exampleJson = null;
            exampleJson = "{\n  \"records\" : [ {\n    \"bestPrice\" : 123.5,\n    \"year\" : \"1977\",\n    \"title\" : \"Star Wars: Episode IV - A New Hope\",\n    \"poster\" : \"http://ia.media-imdb.com/images/M/MV5BOTIyMDY2NGQtOGJjNi00OTk4LWFhMDgtYmE3M2NiYzM0YTVmXkEyXkFqcGdeQXVyNTU1NTcwOTk@._V1_SX300.jpg\",\n    \"providers\" : [ {\n      \"price\" : 123.5,\n      \"providerName\" : \"cinemaworld\"\n    }, {\n      \"price\" : 123.5,\n      \"providerName\" : \"cinemaworld\"\n    } ]\n  }, {\n    \"bestPrice\" : 123.5,\n    \"year\" : \"1977\",\n    \"title\" : \"Star Wars: Episode IV - A New Hope\",\n    \"poster\" : \"http://ia.media-imdb.com/images/M/MV5BOTIyMDY2NGQtOGJjNi00OTk4LWFhMDgtYmE3M2NiYzM0YTVmXkEyXkFqcGdeQXVyNTU1NTcwOTk@._V1_SX300.jpg\",\n    \"providers\" : [ {\n      \"price\" : 123.5,\n      \"providerName\" : \"cinemaworld\"\n    }, {\n      \"price\" : 123.5,\n      \"providerName\" : \"cinemaworld\"\n    } ]\n  } ],\n  \"currentPage\" : 1\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PageRecord>(exampleJson)
            : default(PageRecord);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get a list of movies
        /// </summary>
        
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/v1/movies/recents")]
        [ValidateModelState]
        [SwaggerOperation("V1MoviesRecentsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(MoviePage), description: "Success")]
        public virtual IActionResult V1MoviesRecentsGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MoviePage));

            string exampleJson = null;
            exampleJson = "{\n  \"movies\" : 100,\n  \"startPage\" : 1,\n  \"endPage\" : 10\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MoviePage>(exampleJson)
            : default(MoviePage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
